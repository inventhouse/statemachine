Parse only my status out of a team standup message.  Clone of `statusparser` using sled rules; compare both implentations, but keep in mind that this one is a bit messy to demonstrate how `sled` parses a rules file.

Run like this:

> cat status.txt | ./sled -f statusparser.sled

All this content is ignored without being explicitly marked as comments.

Named Rules:
    # These are questions that define the status-bot's sections:
    /startYesterday/L/1. What did you do yesterday?/yesterday/L/_Yesterday:_  # Use '/' since the action string has ':'
    /startToday/L/2. What do you commit to today?/today/L/_Today:_
    :startHowFar:L:3. How far along are you? Do you think you'll finish soon?:start

    # My status lines should be 'F'ormatted with a block-quote ('> ') prefix
    :myStatus:T:::F:> {i}

# Don't need to explicitly end a rule block if it's immediately followed by another
# These lines would still be parsed, so #-comments are required

Add Rules  # Lenient about the trailing ':'
    :start:startYesterday
    :start:startToday
    :start:DropAll

  addrules:  # Lenient about case and whitespace, too
    :yesterday:startToday
    :yesterday:M:@bholt:myYesterday
    :yesterday:DropAll

    :myYesterday:startToday
    :myYesterday:M:^@\w+$:yesterday
    :myYesterday:myStatus

    :today:startHowFar
    :today:M:@bholt:myToday
    :today:DropAll

    :myToday:startHowFar
    :myToday:M:^@\w+$:today
    :myToday:myStatus
End Rules

-----

Define some basic standbys down here out of the way; named rules are still available throughout the file, though.

Anything between rules blocks is still ignored.

Named Rules:  # Rules defined late in the file are still usable
    :PassAll:T:::I
    :DropAll:T
# End Rules is only required if there is additional content before the end of the file
